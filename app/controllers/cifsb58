class FeedsController < ApplicationController
  before_action :set_feed, only: %i[ show edit update destroy ]

  # GET /feeds or /feeds.json
  def index
    if(current_user)
      @feeds = Feed.all
    else
      authenticate_user
    end
  end

  # GET /feeds/1 or /feeds/1.json
  def show
    #@comments = Comment.where(feed_id: @feed.id).order(updated_at: 'DESC')
    #@favorites = Favorite.where(feed_id: @feed.id).order(updated_at: 'DESC')

    @comments = @feed.comments.order(updated_at: 'DESC')
    @favorites = @feed.favorites.order(updated_at: 'DESC')
    @favorite = @favorites.find_by(user_id: current_user.id)
  end

  # GET /feeds/new
  def new
    if(current_user)
      @feed = Feed.new
    else
      authenticate_user
    end
  end

  # GET /feeds/1/edit
  def edit
  end

  # POST /feeds or /feeds.json
  def create
    byebug

    @feed = Feed.new(feed_params)

    respond_to do |format|
      if @feed.save
        FeedsMailer.feeds_mail(@feed).deliver
        format.html { redirect_to @feed, notice: "Feed was successfully created." }
        format.json { render :show, status: :created, location: @feed }
      else
        format.html { render :new, status: :unprocessable_entity }
        format.json { render json: @feed.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /feeds/1 or /feeds/1.json
  def update
    respond_to do |format|
      if @feed.update(feed_params)
        format.html { redirect_to @feed, notice: "Feed was successfully updated." }
        format.json { render :show, status: :ok, location: @feed }
      else
        format.html { render :edit, status: :unprocessable_entity }
        format.json { render json: @feed.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /feeds/1 or /feeds/1.json
  def destroy
    @feed.destroy
    respond_to do |format|
      format.html { redirect_to feeds_url, notice: "Feed was successfully destroyed." }
      format.json { head :no_content }
    end
  end

  private
  # Use callbacks to share common setup or constraints between actions.
  def set_feed
    @feed = Feed.find(params[:id])
  end

  # Only allow a list of trusted parameters through.
  def feed_params
    #params.fetch(:feed, {})
    params.require(:feed).permit(:user_id, :image, :image_cache)
  end

  def favorite_params
    #params.fetch(:feed, {})
    params.require(:favorite).permit(:user_id, :feed_id)
  end
end
